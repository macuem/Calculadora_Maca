#pragma checksum "E:\2020\.NET CURSO\Clase 1\Calculadora Clase 2\Calculadora Clase 2\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a33cdc3463505f687e79f7a3dee32b5c6bf6218c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\2020\.NET CURSO\Clase 1\Calculadora Clase 2\Calculadora Clase 2\Views\_ViewImports.cshtml"
using Calculadora_Clase_2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\2020\.NET CURSO\Clase 1\Calculadora Clase 2\Calculadora Clase 2\Views\_ViewImports.cshtml"
using Calculadora_Clase_2.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a33cdc3463505f687e79f7a3dee32b5c6bf6218c", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1bbec2ba8ebcb89c14be05b112fbc9bbbda7d4b8", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\2020\.NET CURSO\Clase 1\Calculadora Clase 2\Calculadora Clase 2\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"text-center\">\r\n\r\n\r\n    <h1>Calculadora en HTML</h1>\r\n\r\n    <div id=\"DivPrincipal\">\r\n\r\n");
            WriteLiteral("        <div class=\"row\">\r\n            <div class=\"col-8\">\r\n                <input type=\"text\" id=\"ResultadoId\" />\r\n            </div>\r\n        </div>\r\n\r\n");
            WriteLiteral(@"        <div class=""row"">

            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero (7)"">7</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero (8)"">8</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero (9)"">9</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadoraOp"" onclick=""operar('-')"">-</button>
            </div>

        </div>
");
            WriteLiteral(@"        <div class=""row"">

            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero (4) "">4</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero (5) "">5</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero (6) "">6</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadoraOp"" onclick=""operar('+')"">+</button>
            </div>

        </div>
");
            WriteLiteral(@"        <div class=""row"">

            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero ('1') "">1</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero (2) "">2</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""MostrarNumero (3)"">3</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadoraOp"" onclick=""operar('/')"">/</button>
            </div>


        </div>
");
            WriteLiteral(@"        <div class=""row"">

            <div class=""col-4"">
                <button class=""Boton0"" onclick=""MostrarNumero (0)"">0</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadora"" onclick=""operar('x')"">x</button>
            </div>
            <div class=""col-2"">
                <button class=""BotonCalculadoraOp"" onclick=""operar('=')"">=</button>
            </div>


        </div>
    </div>
</div>


<script>

    var textResultado = document.getElementById(""ResultadoId"");

    var operador = null;

    var resultado = 0;




    function MostrarNumero(numero) {

        this.textResultado.value += numero;

    }

    function operar(operador) {


        if (this.operador !== null) {

            switch (this.operador) {

                case ""+"":
                    this.resultado += this.resultado + Number.parseInt(textResultado.value)
                    this.textResultado.value = this.resultado;
        ");
            WriteLiteral(@"            break;

                case ""-"":

                    this.resultado -= Number.parseInt(textResultado.value)
                    break;

                case ""/"":
                    this.resultado /= this.resultado / Number.parseInt(textResultado.value)
                    this.textResultado.value = this.resultado;
                    break;

            }

            this.textResultado.value = this.resultado;







        }
        else {


            this.resultado = Number.parseInt(textResultado.value);
            this.operador = operador;
            this.textResultado.value = """";

        }
    }





</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
